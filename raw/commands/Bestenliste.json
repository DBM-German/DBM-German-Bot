{
    "name": "Bestenliste",
    "permissions": "NONE",
    "permissions2": "NONE",
    "restriction": "1",
    "_id": "AiMVM",
    "actions": [
        {
            "source": "WFDVm",
            "type": "true",
            "name": "Call Command/Event"
        },
        {
            "ephemeral": false,
            "name": "Start Thinking"
        },
        {
            "shortComment": "Get a member list without bots | Bekomme eine Mitgliederliste ohne Bots",
            "longComment": "",
            "color": "#fff700",
            "bold": false,
            "italic": false,
            "underline": false,
            "name": "Comment [DBM German]"
        },
        {
            "server": "0",
            "varName": "",
            "info": "15",
            "storage": "1",
            "varName2": "members",
            "name": "Store Server Info"
        },
        {
            "list": "7",
            "varName": "members",
            "transform": "item.user.bot ? null : item",
            "null": "null",
            "storage": "1",
            "varName2": "members",
            "name": "Transform List"
        },
        {
            "shortComment": "Transform, sort and store as chunks | Transformiere, sortiere und speichere in Stücken",
            "longComment": "",
            "color": "#fff700",
            "bold": false,
            "italic": false,
            "underline": false,
            "name": "Comment [DBM German]"
        },
        {
            "storage": "7",
            "varName": "members",
            "storage2": "1",
            "varName2": "memberSequence",
            "name": "Create Sequence from List [DBM German]"
        },
        {
            "storage": "1",
            "varName": "memberSequence",
            "operations": [
                {
                    "type": "map",
                    "value": "",
                    "number": "",
                    "selector": "",
                    "dataName": "",
                    "dataDefaultVal": "0",
                    "predicate": "",
                    "transform": "{ member: item, level: item.data(\"level\", 1), xp: item.data(\"xp\", 0), requiredXp: item.data(\"level\", 1) * 10 }",
                    "comparisons": [],
                    "prependNewValues": "false",
                    "tempVarName": "",
                    "callType": "0",
                    "actions": []
                },
                {
                    "type": "sortedWith",
                    "value": "",
                    "number": "",
                    "selector": "",
                    "dataName": "",
                    "dataDefaultVal": "0",
                    "predicate": "",
                    "transform": "",
                    "comparison": "a.level - b.level || a.xp - b.xp",
                    "prependNewValues": "false",
                    "tempVarName": "",
                    "callType": "0",
                    "actions": []
                },
                {
                    "type": "reverse",
                    "value": "",
                    "number": "",
                    "selector": "",
                    "dataName": "",
                    "dataDefaultVal": "0",
                    "predicate": "",
                    "transform": "",
                    "comparison": "",
                    "prependNewValues": "false",
                    "tempVarName": "",
                    "callType": "0",
                    "actions": []
                },
                {
                    "type": "mapIndexed",
                    "value": "",
                    "number": "",
                    "selector": "",
                    "dataName": "",
                    "dataDefaultVal": "0",
                    "predicate": "",
                    "transform": "`**#${index+1}** ${item.member.displayName} – ${item.level} (${item.xp}/${item.requiredXp})`",
                    "comparisons": [],
                    "prependNewValues": "false",
                    "tempVarName": "",
                    "callType": "0",
                    "actions": []
                }
            ],
            "name": "Run Sequence Operations [DBM German]"
        },
        {
            "storage": "1",
            "varName": "memberSequence",
            "operation": "chunk",
            "restore": "false",
            "size": "10",
            "predicate": "",
            "storage2": "1",
            "varName2": "memberStatsPages",
            "name": "Store Sequence as List [DBM German]"
        },
        {
            "list": "7",
            "varName": "memberStatsPages",
            "storage": "1",
            "varName2": "memberStatsPagesCount",
            "name": "Get List Length"
        },
        {
            "shortComment": "Create an embed for each chunk | Erstelle ein Embed für jedes Stück",
            "longComment": "",
            "color": "#fff700",
            "bold": false,
            "italic": false,
            "underline": false,
            "name": "Comment [DBM German]"
        },
        {
            "storage": "1",
            "varName": "embeds",
            "name": "Create List"
        },
        {
            "storage": "1",
            "varName": "loop",
            "changeType": "0",
            "value": "0",
            "name": "Control Variable"
        },
        {
            "anchorName": "loop-entry",
            "name": "Action Anchor"
        },
        {
            "list": "7",
            "varName": "memberStatsPages",
            "getType": "3",
            "position": "${tempVars(\"loop\")}",
            "storage": "1",
            "varName2": "memberStatsPageLines",
            "name": "Get Item from List"
        },
        {
            "list": "7",
            "varName": "memberStatsPageLines",
            "start": "",
            "middle": "",
            "end": "\\n",
            "storage": "1",
            "varName2": "memberStatsPage",
            "name": "Convert List to Text"
        },
        {
            "title": "Bestenliste (Seite ${tempVars(\"loop\")+1}/${tempVars(\"memberStatsPagesCount\")})",
            "author": "",
            "color": "",
            "timestamp": "false",
            "url": "",
            "authorIcon": "",
            "imageUrl": "",
            "thumbUrl": "",
            "storage": "1",
            "varName": "embed",
            "name": "Create Embed Message"
        },
        {
            "storage": "1",
            "varName": "embed",
            "message": "Verwende `/level [nutzer]`, um spezifischere Informationen zu erhalten.\n\n\n${tempVars(\"memberStatsPage\")}",
            "name": "Set Embed Description"
        },
        {
            "storage": "1",
            "varName": "embeds",
            "addType": "0",
            "position": "",
            "value": "tempVars(\"embed\")",
            "name": "Add Item to List"
        },
        {
            "storage": "1",
            "varName": "loop",
            "changeType": "1",
            "value": "1",
            "name": "Control Variable"
        },
        {
            "shortComment": "Continue with next event loop cycle | Fahre mit nächstem Event Loop-Zyklus fort",
            "longComment": "EN:\nThis is to avoid an Stack Overflow Error.\n\n\nDE:\nDas dient dazu, um einen Stack Overflow-Error zu vermeiden.",
            "color": "#fff700",
            "bold": false,
            "italic": false,
            "underline": false,
            "name": "Comment [DBM German]"
        },
        {
            "time": "0",
            "measurement": "0",
            "name": "Wait"
        },
        {
            "storage": "1",
            "varName": "loop",
            "comparison": "1",
            "value": "tempVars(\"memberStatsPagesCount\")",
            "branch": {
                "iftrue": "0",
                "iffalse": "4",
                "iffalseVal": "loop-entry"
            },
            "name": "Check Variable"
        },
        {
            "shortComment": "Send page embed | Sende Page Embed",
            "longComment": "",
            "color": "#fff700",
            "bold": false,
            "italic": false,
            "underline": false,
            "name": "Comment [DBM German]"
        },
        {
            "storage": "1",
            "varName": "channel",
            "changeType": "0",
            "value": "channel",
            "name": "Control Variable"
        },
        {
            "source": "IVhmi",
            "type": "true",
            "name": "Call Command/Event"
        }
    ],
    "comType": "4",
    "description": "Level und XP aller Nutzer"
}