{
    "name": "Eval",
    "permissions": "NONE",
    "permissions2": "NONE",
    "restriction": "1",
    "_id": "wchVI",
    "actions": [
        {
            "behavior": "0",
            "interpretation": "1",
            "code": "globalVars(\"isBotOwner\")(member);",
            "storage": "1",
            "varName": "isOwner",
            "name": "Run Script"
        },
        {
            "storage": "1",
            "varName": "isOwner",
            "comparison": "1",
            "value": "true",
            "branch": {
                "iftrue": "3",
                "iffalse": "0",
                "iftrueVal": "2"
            },
            "name": "Check Variable"
        },
        {
            "storage": "1",
            "varName": "check-team-server",
            "changeType": "0",
            "value": "true",
            "name": "Control Variable"
        },
        {
            "source": "WFDVm",
            "type": "true",
            "name": "Call Command/Event"
        },
        {
            "shortComment": "Check for \"eval-code\" variable | Prüfe auf \"eval-code\"-Variable",
            "longComment": "EN:\nThis variable is provided by the modal interaction in this command, which just calls this command again with that variable.\n\n\nDE:\nDiese Variable wird von der Modal-Interaktion in diesem Command bereitgestellt, welche einfach diesen Command mit der Variable wieder aufruft.",
            "color": "#fff700",
            "bold": false,
            "italic": false,
            "underline": false,
            "name": "Comment [DBM German]"
        },
        {
            "storage": "1",
            "varName": "eval-code",
            "comparison": "10",
            "value": "0",
            "branch": {
                "iftrue": "4",
                "iffalse": "0",
                "iftrueVal": "eval"
            },
            "name": "Check Variable"
        },
        {
            "shortComment": "Check for \"Code\" parameter | Prüfe auf \"Code\"-Parameter",
            "longComment": "",
            "color": "#fff700",
            "bold": false,
            "italic": false,
            "underline": false,
            "name": "Comment [DBM German]"
        },
        {
            "storage": "4",
            "varName": "Code",
            "comparison": "10",
            "value": "0",
            "branch": {
                "iftrue": "4",
                "iffalse": "4",
                "iftrueVal": "eval-param",
                "iffalseVal": "eval-modal"
            },
            "name": "Check Variable"
        },
        {
            "name": "End Action Sequence"
        },
        {
            "shortComment": "Prepare parameter evaluation | Parameter-Evaluation vorbereiten",
            "longComment": "",
            "color": "#fff700",
            "bold": false,
            "italic": false,
            "underline": false,
            "name": "Comment [DBM German]"
        },
        {
            "anchorName": "eval-param",
            "name": "Action Anchor"
        },
        {
            "storage": "1",
            "varName": "eval-code",
            "changeType": "0",
            "value": "slashParams(\"Code\")",
            "name": "Control Variable"
        },
        {
            "anchorName": "eval",
            "name": "Go To Action Anchor"
        },
        {
            "name": "End Action Sequence"
        },
        {
            "shortComment": "Send embed with modal interaction | Sende Embed mit Modal-Interaktion",
            "longComment": "",
            "color": "#fff700",
            "bold": false,
            "italic": false,
            "underline": false,
            "name": "Comment [DBM German]"
        },
        {
            "anchorName": "eval-modal",
            "name": "Action Anchor"
        },
        {
            "server": "0",
            "varName": "",
            "storage": "1",
            "varName2": "bot",
            "name": "Get Bot as Member"
        },
        {
            "member": "2",
            "varName": "bot",
            "info": "16",
            "storage": "1",
            "varName2": "avatarURL",
            "name": "Store Member Info"
        },
        {
            "channel": "0",
            "varName": "",
            "message": "",
            "buttons": [
                {
                    "name": "Editor öffnen",
                    "type": "SECONDARY",
                    "id": "msg-button-b99105c",
                    "row": "",
                    "url": "",
                    "emoji": "",
                    "mode": "MULTIPERSONAL",
                    "time": "",
                    "actions": [
                        {
                            "title": "Eval - Editor",
                            "textInputs": [
                                {
                                    "name": "Eingabe",
                                    "placeholder": "return Math.random();",
                                    "minLength": "0",
                                    "maxLength": "4000",
                                    "id": "modal-code",
                                    "row": "",
                                    "style": "PARAGRAPH",
                                    "required": "true"
                                }
                            ],
                            "name": "Show Modal"
                        },
                        {
                            "storage": "0",
                            "varName": "",
                            "type": "allButtons",
                            "searchValue": "",
                            "name": "Remove Buttons and Selects"
                        },
                        {
                            "storage": "1",
                            "varName": "eval-code",
                            "changeType": "0",
                            "value": "tempVars(\"modal-code\")",
                            "name": "Control Variable"
                        },
                        {
                            "storage": "1",
                            "varName": "edit",
                            "changeType": "0",
                            "value": "true",
                            "name": "Control Variable"
                        },
                        {
                            "source": "wchVI",
                            "type": "true",
                            "name": "Call Command/Event"
                        }
                    ]
                }
            ],
            "selectMenus": [],
            "attachments": [],
            "embeds": [
                {
                    "title": "Eval",
                    "url": "",
                    "color": "${globalVars(\"default-color\")}",
                    "timestamp": "false",
                    "imageUrl": "",
                    "thumbUrl": "",
                    "description": "Verwende `/eval [code]` oder den Knopf unter dieser Nachricht, um JavaScript-Code auszuführen.\nSchadcode darf nicht ausgeführt werden.",
                    "fields": [],
                    "author": "",
                    "authorUrl": "",
                    "authorIcon": "",
                    "footerText": "DBM German Bot v${globalVars(\"version\")}",
                    "footerIconUrl": "${tempVars(\"avatarURL\")}"
                }
            ],
            "reply": true,
            "ephemeral": false,
            "tts": false,
            "overwrite": false,
            "dontSend": false,
            "editMessage": "0",
            "editMessageVarName": "",
            "storage": "0",
            "varName2": "",
            "name": "Send Message"
        },
        {
            "name": "End Action Sequence"
        },
        {
            "shortComment": "Evaluate code | Evaluiere Code",
            "longComment": "",
            "color": "#fff700",
            "bold": false,
            "italic": false,
            "underline": false,
            "name": "Comment [DBM German]"
        },
        {
            "anchorName": "eval",
            "name": "Action Anchor"
        },
        {
            "storage": "1",
            "varName": "isOwner",
            "comparison": "1",
            "value": "true",
            "branch": {
                "iftrue": "0",
                "iffalse": "3",
                "iffalseVal": "2"
            },
            "name": "Check Variable"
        },
        {
            "storage": "1",
            "varName": "eval-code",
            "comparison": "7",
            "value": "\"\\\"use sandbox\\\";\"",
            "branch": {
                "iftrue": "0",
                "iffalse": "3",
                "iffalseVal": "1"
            },
            "name": "Check Variable"
        },
        {
            "behavior": "0",
            "interpretation": "1",
            "code": "let code = tempVars(\"eval-code\");\n\n// Remove \"use sandbox\", as this only indicates to the bot to use sandbox mode\ncode = code.replace(/^\"use sandbox\";?\\s+(\\n\\s*)?/, \"\");\n\nthis.storeValue(code, 1, \"eval-code\", cache);\nthis.storeValue(false, 1, \"isOwner\", cache);",
            "storage": "0",
            "varName": "",
            "name": "Run Script"
        },
        {
            "storage": "1",
            "varName": "channel",
            "changeType": "0",
            "value": "channel",
            "name": "Control Variable"
        },
        {
            "storage": "1",
            "varName": "isOwner",
            "comparison": "1",
            "value": "true",
            "branch": {
                "iftrue": "99",
                "iffalse": "99",
                "iftrueActions": [
                    {
                        "storage": "1",
                        "varName": "eval-timestamp",
                        "changeType": "0",
                        "value": "Date.now()",
                        "name": "Control Variable"
                    },
                    {
                        "storage": "1",
                        "varName": "title",
                        "changeType": "0",
                        "value": "\"Eval\"",
                        "name": "Control Variable"
                    },
                    {
                        "behavior": "0",
                        "interpretation": "1",
                        "code": "const EVAL_CODE_LENGTH = 1500;\nconst { Util } = DBM.DiscordJS;\n\n`Eingabe:\n\\`\\`\\`js\n${Util.escapeMarkdown(globalVars(\"breakText\")(tempVars(\"eval-code\"), EVAL_CODE_LENGTH))}\n\\`\\`\\`\nAusgabe:\n\\`\\`\\`js\nBitte warten...\n\\`\\`\\`\n\n*Vollzugriff – Sandbox deaktiviert*`;",
                        "storage": "1",
                        "varName": "description",
                        "name": "Run Script"
                    },
                    {
                        "source": "FGdiL",
                        "type": "true",
                        "name": "Call Command/Event"
                    },
                    {
                        "behavior": "1",
                        "interpretation": "1",
                        "code": "try {\n    let promise = eval(\n        \"(async () => {\\n\" +\n        tempVars(\"eval-code\") +\n        \"\\n})();\"\n    );\n\n    promise.then(result => {\n        this.storeValue(result, 1, \"eval-result\", cache);\n        this.callNextAction(cache);\n    }).catch(error => {\n        this.storeValue(error, 1, \"eval-error\", cache);\n        this.callNextAction(cache);\n    });\n    \n} catch(error) {\n    this.storeValue(error, 1, \"eval-error\", cache);\n    this.callNextAction(cache);\n}",
                        "storage": "0",
                        "varName": "",
                        "name": "Run Script"
                    },
                    {
                        "behavior": "0",
                        "interpretation": "1",
                        "code": "const EVAL_CODE_LENGTH = 1500;\nconst EVAL_CONTENT_LENGTH = 4500;\nconst { Util } = DBM.DiscordJS;\n\nlet content = tempVars(\"eval-result\");\nlet contentName = \"Ausgabe\";\n\nif(tempVars(\"eval-error\")) {\n    content = tempVars(\"eval-error\");\n    contentName = \"Error\";\n}\n\n`Eingabe:\n\\`\\`\\`js\n${Util.escapeMarkdown(globalVars(\"breakText\")(tempVars(\"eval-code\"), EVAL_CODE_LENGTH))}\n\\`\\`\\`\n${contentName}:\n\\`\\`\\`js\n${Util.escapeMarkdown(globalVars(\"breakText\")(String(content?.toString()), EVAL_CONTENT_LENGTH))}\n\\`\\`\\`\n\n*Vollzugriff – Sandbox deaktiviert*`;",
                        "storage": "1",
                        "varName": "description",
                        "name": "Run Script"
                    },
                    {
                        "storage": "1",
                        "varName": "edit",
                        "changeType": "0",
                        "value": "true",
                        "name": "Control Variable"
                    },
                    {
                        "source": "FGdiL",
                        "type": "true",
                        "name": "Call Command/Event"
                    }
                ],
                "iffalseActions": [
                    {
                        "storage": "1",
                        "varName": "eval-timestamp",
                        "changeType": "0",
                        "value": "Date.now()",
                        "name": "Control Variable"
                    },
                    {
                        "storage": "1",
                        "varName": "title",
                        "changeType": "0",
                        "value": "\"Eval\"",
                        "name": "Control Variable"
                    },
                    {
                        "behavior": "0",
                        "interpretation": "1",
                        "code": "const EVAL_CODE_LENGTH = 1500;\nconst { Util } = DBM.DiscordJS;\n\n`Eingabe:\n\\`\\`\\`js\n${Util.escapeMarkdown(\n    globalVars(\"breakText\")(\n        tempVars(\"eval-code\"),\n        EVAL_CODE_LENGTH\n    )\n)}\n\\`\\`\\`\nAusgabe:\n\\`\\`\\`js\nBitte warten...\n\\`\\`\\`\nKonsole:\n\\`\\`\\`cmd\nBitte warten...\n\\`\\`\\`\nExit Code:\n\\`\\`\\`\nBitte warten...\n\\`\\`\\`\n\nAusführung endet <t:${Math.ceil(tempVars(\"eval-timestamp\") / 1000) + 5}:R>`;",
                        "storage": "1",
                        "varName": "description",
                        "name": "Run Script"
                    },
                    {
                        "source": "FGdiL",
                        "type": "true",
                        "name": "Call Command/Event"
                    },
                    {
                        "behavior": "1",
                        "interpretation": "1",
                        "code": "const { fork } = require(\"node:child_process\");\n\nconst child = fork(\"./code/eval-worker.js\", { silent: true , timeout: 10e3, serialization: \"advanced\" });\nlet consoleOutput = \"\";\n\n// Send eval code to child process after this script fully executed\nsetImmediate(() => child.send(tempVars(\"eval-code\")));\n\nchild.on(\"message\", response => {\n    if(response.result !== undefined) {\n        let result;\n        try {\n            result = JSON.parse(response.result);\n\n            if(result === undefined) throw new Error(\"No JSON-friendly result.\");\n        } catch(e) {\n            result = response.result;\n        }\n\n        this.storeValue(result, 1, \"eval-result\", cache);\n    } else if(response.error !== undefined) {\n        this.storeValue(response.error, 1, \"eval-error\", cache);\n    } else {\n        this.storeValue(new TypeError(\"Invalid eval worker response: \" + response), 1, \"eval-error\", cache);\n    }\n});\n\nchild.on(\"error\", error => {\n    this.storeValue(error, 1, \"eval-error\", cache);\n});\n\nchild.on(\"exit\", code => {\n    this.storeValue(code ?? 0, 1, \"eval-exit-code\", cache);\n    this.storeValue(consoleOutput, 1, \"eval-console\", cache);\n    this.callNextAction(cache);\n});\n\nchild.stdout.on(\"data\", data => {\n    consoleOutput += data.toString();\n});\n\nchild.stderr.on(\"data\", data => {\n    consoleOutput += data.toString();\n});",
                        "storage": "0",
                        "varName": "",
                        "name": "Run Script"
                    },
                    {
                        "behavior": "0",
                        "interpretation": "1",
                        "code": "const EVAL_CODE_LENGTH = 1500;\nconst EVAL_CONTENT_LENGTH = 2000;\nconst EVAL_CONSOLE_LENGTH = 2000;\nconst EVAL_EXIT_CODE_LENGTH = 500;\nconst INVISIBLE_CHAR = \"ㅤ\";\nconst { Util } = DBM.DiscordJS;\n\nlet content = tempVars(\"eval-result\");\nlet contentName = \"Ausgabe\";\n\nif(tempVars(\"eval-error\")) {\n    content = tempVars(\"eval-error\");\n    contentName = \"Error\";\n}\n\n`Eingabe:\n\\`\\`\\`js\n${Util.escapeMarkdown(\n    globalVars(\"breakText\")(\n        tempVars(\"eval-code\"),\n        EVAL_CODE_LENGTH\n    )\n)}\n\\`\\`\\`\n${contentName}:\n\\`\\`\\`js\n${Util.escapeMarkdown(\n    globalVars(\"breakText\")(\n        String(content?.toString()),\n        EVAL_CONTENT_LENGTH\n    )\n)}\n\\`\\`\\`\nKonsole:\n\\`\\`\\`cmd\n${tempVars(\"eval-console\")?.length > 0\n    ? Util.escapeMarkdown(\n        globalVars(\"breakText\")(\n            tempVars(\"eval-console\"),\n            EVAL_CONSOLE_LENGTH\n        )\n    )\n    : INVISIBLE_CHAR\n}\n\\`\\`\\`\nExit Code:\n\\`\\`\\`\n${Util.escapeMarkdown(\n    globalVars(\"breakText\")(\n        String(tempVars(\"eval-exit-code\")),\n        EVAL_EXIT_CODE_LENGTH\n    )\n)}\n\\`\\`\\``;",
                        "storage": "1",
                        "varName": "description",
                        "name": "Run Script"
                    },
                    {
                        "storage": "1",
                        "varName": "edit",
                        "changeType": "0",
                        "value": "true",
                        "name": "Control Variable"
                    },
                    {
                        "source": "FGdiL",
                        "type": "true",
                        "name": "Call Command/Event"
                    }
                ]
            },
            "name": "Check Variable"
        }
    ],
    "comType": "4",
    "description": "JavaScript-Code ausführen",
    "parameters": [
        {
            "name": "Code",
            "description": "Auszuführender Code",
            "type": "STRING",
            "required": false,
            "choices": null
        }
    ],
    "_timeRestriction": 5
}